---
import TableOfContentsHeading from "./TableOfContentsHeading.astro";
// TableOfContents.astro
const { headings } = Astro.props;
const toc = buildToc(headings);

function buildToc(headings: any) {
  const toc: any = [];
  const parentHeadings = new Map();
  if (!headings || headings.length == 0) return toc;
  let min_depth = 100;
  headings.forEach((h: any) => {
    min_depth = Math.min(min_depth, h.depth);
  });
  headings.forEach((h: any) => {
    h.depth -= min_depth - 1;
  });
  headings.forEach((h: any) => {
    const heading = { ...h, subheadings: [] };
    parentHeadings.set(heading.depth, heading);
    // Change 2 to 1 if your markdown includes your <h1>
    if (heading.depth === 1) {
      toc.push(heading);
    } else {
      parentHeadings.get(heading.depth - 1).subheadings.push(heading);
    }
  });
  return toc;
}
---

<nav class="text-sm">
  <ul>
    {
      toc.length > 0 &&
        toc.map((heading: any) => <TableOfContentsHeading heading={heading} />)
    }
  </ul>
  <svg class="toc-progress" xmlns="http://www.w3.org/2000/svg">
    <path
      class="toc-marker"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-dasharray="1 0 0 1000"
      stroke-dashoffset="1"
      stroke-linecap="round"
      stroke-linejoin="round"
    ></path>
  </svg>
</nav>

<style>
  .toc-progress {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
</style>