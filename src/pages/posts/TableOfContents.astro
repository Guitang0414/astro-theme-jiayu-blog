---
import TableOfContentsHeading from "./TableOfContentsHeading.astro";
// TableOfContents.astro
const { headings } = Astro.props;
const toc = buildToc(headings);

function buildToc(headings: any) {
  const toc: any = [];
  const parentHeadings = new Map();
  console.log(headings);
  let min_depth = 100;
  headings.forEach((h: any) => {
    min_depth = Math.min(min_depth, h.depth);
  });
  headings.forEach((h: any) => {
    h.depth -= min_depth - 1;
  });
  if (!headings || headings.length == 0) return toc;
  headings.forEach((h: any) => {
    const heading = { ...h, subheadings: [] };
    parentHeadings.set(heading.depth, heading);
    // Change 2 to 1 if your markdown includes your <h1>
    if (heading.depth === 1) {
      toc.push(heading);
    } else {
      parentHeadings.get(heading.depth - 1).subheadings.push(heading);
    }
  });
  return toc;
}
---

<nav class="text-sm">
  <ul>
    {
      toc.length > 0 &&
        toc.map((heading: any) => <TableOfContentsHeading heading={heading} />)
    }
  </ul>
</nav>
